.row {
  // if viewport < 114 rem, then it fill 100% of the available space
  max-width: $grid-width; // 1rem = 10px
  // background-color: #eee;
  // top/bottom - 0, left/right - auto
  margin: 0 auto; // center block elements inside another block

  // select everything expect last child -> last row
  &:not(:last-child) {
    margin-bottom: $gutter-vertical; // put margin bottom to all rows except last one

    @include respond(tab-port) {
      margin-bottom: $gutter-vertical-small;
    }
  }

  @include respond(tab-port) {
    max-width: 50rem;
    // top-bottom - 0 | left-right - 3
    padding: 0 3rem;
  }

  @include clearfix;

  // select all elements in which the class attribute starts (^) with col
  // if using * means select any class which contain col-
  // $ means any class that ends with col-
  [class^="col-"] {
    // background-color: burlywood;
    float: left;

    // add margin right to all columns except last child
    &:not(:last-child) {
      margin-right: $gutter-horizontal;

      @include respond(tab-port) {
        margin-right: 0;
        margin-bottom: $gutter-vertical-small;
      }
    }

    // make the grid column to occupy the row
    @include respond(tab-port) {
      // put important to make sure other width below are overwrite
      width: 100% !important;
    }
  }

  .col-1-of-2 {
    width: calc((100% - #{$gutter-horizontal}) / 2);
  }

  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }

  .col-2-of-3 {
    // 2 * 1/3 + gutter
    width: calc(
      2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal}
    );
  }

  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }

  .col-2-of-4 {
    width: calc(
      2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal}
    );
  }

  .col-3-of-4 {
    width: calc(
      3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + (2 * #{$gutter-horizontal})
    );
  }
}

// .row:last-child() -> select last child
