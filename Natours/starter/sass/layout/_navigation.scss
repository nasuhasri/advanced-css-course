.navigation {
  &__checkbox {
    display: none;
  }

  &__button {
    background-color: $color-white;
    height: 7rem;
    width: 7rem;
    position: fixed;
    top: 6rem;
    right: 6rem;
    border-radius: 50%;
    z-index: 2000;
    box-shadow: 0 1rem 3rem rgba($color-black, 0.1);
    text-align: center;
    cursor: pointer;
  }

  &__background {
    height: 6rem;
    width: 6rem;
    border-radius: 50%;
    // similar with position absolute but using fixed, it doesnt change position when we scroll the page
    // takes element out of the flow & need to specify the position
    position: fixed;
    top: 6.5rem;
    right: 6.5rem;
    // linear gradient goes from one side to another side
    // radial gradient starts in the middle of element and goes in all outside directions
    background-image: radial-gradient(
      $color-primary-light,
      $color-primary-dark
    );
    // works on element which has its position defined
    // put it on top of other element
    // stays on top all the time
    z-index: 1000;
    transition: transform 0.8s cubic-bezier(0.83, 0, 0.17, 1);

    // make the background bigger in size
    // transform: scale(80);
  }

  &__nav {
    height: 100vh;
    position: fixed;
    top: 0;
    right: 0;
    z-index: 1500;

    // hide the nav, adding width to 0 because the links still there
    opacity: 0;
    width: 0;
    // animate opacity for 0.8s
    transition: all 0.8s cubic-bezier(0.68, -0.6, 0.32, 1.6);
  }

  &__list {
    // make list center
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    list-style: none;
    text-align: center;
    width: 100%;
  }

  &__item {
    margin: 1rem;
  }

  &__link {
    &:link,
    &:visited {
      display: inline-block;
      font-size: 3rem;
      font-weight: 300;
      padding: 1rem 2rem;
      color: $color-white;
      text-decoration: none;
      text-transform: uppercase;
      background-image: linear-gradient(
        120deg,
        transparent 0%,
        transparent 50%,
        $color-white 50%
      );
      background-size: 220%;
      transition: all 0.4s;

      span {
        display: inline-block;
        margin-right: 1.5rem;
      }
    }

    &:hover,
    &:active {
      background-position: 100%;
      color: $color-primary;
      transform: translateX(1rem);
    }
  }

  // FUNCTIONALITY
  // ~ -> tilde sign -> general sibling combinator
  // select siblings of an element even if they are not directly adjacent
  // when button is checked, it will scale to 80
  &__checkbox:checked ~ &__background {
    transform: scale(80);
  }

  // display navigation back
  &__checkbox:checked ~ &__nav {
    opacity: 1;
    width: 100%;
  }

  // ICON
  &__icon {
    position: relative;
    margin-top: 3.5rem;

    // creating 3 horizontal line - before, span, after
    &,
    &::before,
    &::after {
      width: 3rem;
      height: 2px;
      background-color: $color-grey-dark-3;
      display: inline-block;
    }

    // to make before and after pseudo elements appeared on the page, set content to empty
    &::before,
    &::after {
      content: "";
      position: absolute;
      left: 0;
      transition: all 0.2s;
    }

    &::before {
      top: -0.8rem;
    }
    &::after {
      top: 0.8rem;
    }
  }

  // when button is hover, select ::before pseudo element of icon
  // can select like this because icon is child of button
  &__button:hover &__icon::before {
    top: -1rem;
  }

  &__button:hover &__icon::after {
    top: 1rem;
  }

  // + -> next sibling combinator
  // matches only those elements matched by the second selector that are the next sibling element of the first selector.
  // when menu button is checked, we make icon looks disappeared
  &__checkbox:checked + &__button &__icon {
    background-color: transparent;
  }

  &__checkbox:checked + &__button &__icon::before {
    top: 0;
    transform: rotate(135deg);
  }

  &__checkbox:checked + &__button &__icon::after {
    top: 0;
    transform: rotate(-135deg);
  }
}
