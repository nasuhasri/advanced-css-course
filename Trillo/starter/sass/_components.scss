// LOGO
.logo {
  height: 3.25rem;
  margin-left: 2rem;
}

// SEARCH
.search {
  // 0 - dont want it to grow to fill all its available space
  // 0 - dont want it to shrink
  // 40% - occupy 40% of the header
  flex: 0 0 40%;

  display: flex;
  justify-content: center;
  align-items: center;

  &__input {
    font-family: inherit;
    font-size: inherit;
    color: inherit;
    background-color: var(--color-grey-light-2);
    border: none;
    // top-bottom | left-right
    padding: 0.7rem 2rem;
    border-radius: 100px;
    width: 90%;
    transition: all 0.2s;
    // button will move on top of the input
    margin-right: -3.25rem;

    &:focus {
      outline: none;
      width: 100%;
      background-color: var(--color-grey-light-3);
    }

    &::placeholder {
      font-weight: 100;
      color: var(--color-grey-light-4);
    }
  }

  // adjacent
  &__input:focus + &__button {
    // button become same color as the input
    background-color: var(--color-grey-light-3);
  }

  &__button {
    border: none;
    background-color: var(--color-grey-light-2);

    &:focus {
      outline: none;
    }

    &:active {
      transform: translateY(2px);
    }
  }

  // format svg icon to be small
  &__icon {
    height: 2rem;
    width: 2rem;
    fill: var(--color-grey-dark-3);
  }
}

// USER NAVIGATION
.user-nav {
  display: flex;
  align-items: center;
  // strech the height based on the header height (full-height)
  // override the align-items center at the header
  align-self: stretch;

  // select all direct children --> icon-box, icon-box, user
  & > * {
    padding: 0 2rem;
    cursor: pointer;
    height: 100%;

    display: flex;
    // center it vertically to all direct children instead of icon-box
    align-items: center;
  }

  & > *:hover {
    background-color: var(--color-grey-light-2);
  }

  &__icon-box {
    // need to put the position here because icon is svg element
    position: relative;
  }

  &__icon {
    height: 2.25rem;
    width: 2.25rem;
    fill: var(--color-grey-dark-2);
  }

  &__notification {
    font-size: 0.8rem;
    height: 1.75rem;
    width: 1.75rem;
    border-radius: 50%;
    background-color: var(--color-primary);
    color: #fff;

    // to position the notification number on top of the icon
    position: absolute;
    top: 1.5rem;
    right: 1.1rem;

    // center the text using flex
    display: flex;
    // horizontal
    justify-content: center;
    // vertical
    align-items: center;
  }

  &__user-photo {
    height: 3.75rem;
    border-radius: 50%;
    margin-right: 1rem;
  }
}

// SIDE NAVIGATION
.side-nav {
  font-size: 1.4rem;
  list-style-type: none;
  margin-top: 3.5rem;

  @media only screen and (max-width: $bp-medium) {
    display: flex;
    margin: 0;
  }

  &__item {
    position: relative;

    // add margin bottom to all element except the last one
    &:not(:last-child) {
      margin-bottom: 0.5rem;

      @media only screen and (max-width: $bp-medium) {
        margin-bottom: 0;
      }
    }

    @media only screen and (max-width: $bp-medium) {
      // occupy available space with same value
      flex: 1;
    }
  }

  &__item::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 3px;
    background-color: var(--color-primary);
    transform: scaleY(0);
    // to test the animation
    // for transform we want 0.2s, for width we want to wait 0.2s then use 0.4s
    // set different settings for different properties for animation
    transition: transform 0.2s, width 0.4s cubic-bezier(1, 0, 0, 1) 0.2s,
      background-color 0.1s;
  }

  &__item:hover::before,
  &__item--active::before {
    // the background color grows in Y direction when hover on navigation items
    // transform origin starts at center by default
    transform: scaleY(1);
    width: 100%;
  }

  &__item:active::before {
    background-color: var(--color-primary-light);
  }

  &__link:link,
  &__link:visited {
    color: var(--color-grey-light-1);
    text-decoration: none;
    text-transform: uppercase;
    display: block;
    // top-bottom | left-right
    padding: 1.5rem 3rem;
    // position the link on top of pseudo element
    position: relative;
    z-index: 10;

    display: flex;
    align-items: center;

    @media only screen and (max-width: $bp-medium) {
      justify-content: center;
      padding: 2rem;
    }
  }

  &__icon {
    width: 1.75rem;
    height: 1.75rem;
    margin-right: 2rem;
    // color of current element or parent
    fill: currentColor;
  }
}

// LEGAL TEXT
.legal {
  font-size: 1.2rem;
  color: var(--color-grey-light-4);
  text-align: center;
  padding: 2.5rem;

  @media only screen and (max-width: $bp-medium) {
    display: none;
  }
}

// GALLERY
.gallery {
  display: flex;

  &__photo {
    width: 100%;
    display: block;
  }
}

// HOTEL OVERVIEW
.overview {
  display: flex;
  align-items: center;
  border-bottom: var(--line);

  &__heading {
    font-size: 2.25rem;
    font-weight: 300;
    text-transform: uppercase;
    letter-spacing: 1px;
    padding: 1.5rem 3rem;
  }

  &__stars {
    // this item should grow and occupy all available space
    // flex: 1;
    // using margin right auto will make this element occupy the space following the content
    margin-right: auto;
    background-color: orange;
    display: flex;
  }

  &__icon-star,
  &__icon-location {
    width: 1.75rem;
    height: 1.75rem;
    fill: var(--color-primary);
  }

  &__location {
    font-size: 1.2rem;
    display: flex;
    align-items: center;
  }

  &__icon-location {
    margin-right: 0.5rem;
  }

  &__rating {
    background-color: var(--color-primary);
    color: #fff;
    margin-left: 3rem;
    padding: 0 2.25rem;
    // override this element to stretch because all are in center
    align-self: stretch;

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }

  &__rating-average {
    font-size: 2.25rem;
    font-weight: 300;
    margin-bottom: -3px;
  }

  &__rating-count {
    font-size: 0.8rem;
    text-transform: uppercase;
  }
}

// BUTTON INLINE
.btn-inline {
  border: none;
  color: var(--color-primary);
  font-size: inherit;
  border-bottom: 1px solid currentColor;
  padding-bottom: 2px;
  display: inline-block;
  background-color: transparent;
  cursor: pointer;
  transition: all 0.2s;

  & span {
    margin-left: 3px;
    transition: margin-left 0.2s;
  }

  &:hover {
    color: var(--color-grey-dark-1);

    span {
      margin-left: 8px;
    }
  }

  &:focus {
    outline: none;
    // call the animation and button will animate infinite as long as it is on focus state
    animation: pulsate 1s infinite;
  }
}

@keyframes pulsate {
  0% {
    transform: scale(1);
    box-shadow: none;
  }

  50% {
    transform: scale(1.05);
    box-shadow: 0 1rem 4rem rgba(0, 0, 0, 0.25);
  }

  100% {
    transform: scale(1);
    box-shadow: none;
  }
}

// PARAGRAPH
.paragraph:not(:last-of-type) {
  margin-bottom: 2rem;
}

// LIST
.list {
  list-style: none;
  margin: 3rem 0;
  padding: 3rem 0;
  border-top: var(--line);
  border-bottom: var(--line);

  display: flex;
  // wrap the element into new line
  flex-wrap: wrap;

  &__item {
    // grow | shrink | width or basis
    flex: 0 0 50%;
    margin-bottom: 0.7rem;
  }

  &__item::before {
    content: "";
    display: inline-block;
    height: 1rem;
    width: 1rem;
    margin-right: 0.7rem;

    // older browser
    // background-image: url(../img/chevron-thin-right.svg);
    // background-size: cover;

    // modern browser = masks
    /*
    1. masks defines an area where we can look through the element and see what's behind that element
    */
    background-color: var(--color-primary);
    mask-image: url(../img/chevron-thin-right.svg);
    mask-size: cover;
  }
}

// RECOMMEND
.recommend {
  font-size: 1.3rem;
  color: var(--color-grey-dark-3);

  display: flex;
  align-items: center;

  &__count {
    margin-right: auto;
  }

  &__friends {
    display: flex;
  }

  &__photo {
    // border-box - includes padding and border into width and height of the element
    box-sizing: content-box;
    height: 4rem;
    width: 4rem;
    border-radius: 50%;
    border: 3px solid #fff;

    &:not(:last-child) {
      margin-right: -2rem;
    }
  }
}

// REVIEWS
.review {
  background-color: #fff;
  box-shadow: var(--shadow-light);
  padding: 3rem;
  margin-bottom: 3.5rem;
  position: relative;
  overflow: hidden;

  @media only screen and (max-width: $bp-medium) {
    padding: 2rem;
    margin-bottom: 3rem;
  }

  &__text {
    margin-bottom: 2rem;
    // z-index only works if we put position relative
    z-index: 10;
    position: relative;
  }

  &__user {
    display: flex;
    align-items: center;
  }

  &__photo {
    height: 4.5rem;
    width: 4.5rem;
    border-radius: 50%;
    margin-right: 1.5rem;
  }

  &__user-box {
    margin-right: auto;
  }

  &__user-name {
    font-size: 1.1rem;
    font-weight: 600;
    text-transform: uppercase;
    margin-bottom: 0.4rem;
  }

  &__user-date {
    font-size: 1rem;
    color: var(--color-grey-dark-3);
  }

  &__rating {
    color: var(--color-primary);
    font-size: 2.2rem;
    font-weight: 300;
  }

  &::before {
    content: "\201C";
    position: absolute;
    top: -2.75rem;
    left: -1rem;
    line-height: 1;
    font-size: 20rem;
    color: var(--color-grey-light-2);
    font-family: sans-serif;
    z-index: 1;
  }
}

// CALL TO ACTION
.cta {
  padding: 3.5rem 0;
  text-align: center;

  @media only screen and (max-width: $bp-medium) {
    padding: 2.5rem 0;
  }

  &__book-now {
    font-size: 2rem;
    font-weight: 300;
    text-transform: uppercase;
    margin-bottom: 2.5rem;
  }
}

.btn {
  font-size: 1.5rem;
  font-weight: 300;
  text-transform: uppercase;
  border-radius: 100px;
  border: none;
  background-image: linear-gradient(
    to right,
    var(--color-primary-light),
    var(--color-primary-dark)
  );
  color: #fff;
  position: relative;
  // to hide the the invisible text bcs element is outside of the button and overflow element
  overflow: hidden;
  cursor: pointer;

  & > * {
    display: inline-block;
    height: 100%;
    width: 100%;
    transition: all 0.2s;
  }

  &__visible {
    // size determined by padding
    padding: 2rem 7.5rem;
  }

  &__invisible {
    position: absolute;
    padding: 2rem 0;
    left: 0;
    top: -100%;
  }

  &:hover {
    background-image: linear-gradient(
      to left,
      var(--color-primary-light),
      var(--color-primary-dark)
    );
  }

  &:hover &__visible {
    // didnt use top because we dont use position in visible element
    // so we use transform and move it in Y direction, translate 100% of its height down
    transform: translateY(100%);
  }

  &:hover &__invisible {
    top: 0;
  }

  &:focus {
    outline: none;
    animation: pulsate 1s infinite;
  }
}
